### Source: https://github.com/avatsaev/angular4-docker-example/blob/master/Dockerfile
### STAGE 1: Build ###

# We label our stage as 'builder'
FROM node:10.15-alpine as builder


COPY package.json package-lock.json ./


## Storing node modules on a separate layer will prevent unnecessary npm installs at each build
RUN npm i -g npm@6.3 && npm ci && mkdir /ng-app && mv ./node_modules ./ng-app/

## Move to /ng-app (eq: cd /ng-app)
WORKDIR /ng-app


# Copy everything from host to /ng-app in the container
COPY . .

## Build the angular app in production mode and store the artifacts in dist folder
ARG NG_ENV=production
RUN npm run ng build -- --configuration=$NG_ENV


### STAGE 2: Setup ###

FROM nginx:1.13.3-alpine

## Copy our default nginx config
COPY nginx/default.conf /etc/nginx/conf.d/

## Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

## From 'builder' stage copy over the artifacts in dist folder to default nginx public folder ("web" is the ng project)
COPY --from=builder /ng-app/dist/web /usr/share/nginx/html

COPY nginx/fullchain.pem /etc/letsencrypt/fullchain.pem
COPY nginx/privkey.pem /etc/letsencrypt/privkey.pem

CMD ["nginx", "-g", "daemon off;"]
