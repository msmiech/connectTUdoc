## DataSource configs
#datasource for dev/local (and local docker with portforwarding)
#spring.datasource.url=jdbc:postgresql://localhost:5432/medconnect
#datasource for (inside of) docker
spring.datasource.url= jdbc:postgresql://db:5432/medconnect
#spring.datasource.url= jdbc:postgresql://192.168.99.100:5432/medconnect
spring.datasource.username=medconnect
spring.datasource.password=1337

# future settings only update
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always
#spring.jpa.database=postgresql

#for spring fox rest
spring.application.version=0.0.1

## HTTP
# server.port=9100
## HTTPS
server.port=8443
#security.require-ssl=true #deprecated!
# Add your own p12 keystore
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=mc1337
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=medconnect

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

## Logging Settings
logging.level.=ERROR
log4j.rootLogger=error
# Disable Log entry about LOB createClob()
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.hbm2ddl.import_files=import.sql,import_medicine.sql

## Log SQL
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql=TRACE
hibernate.show_sql = false
logging.level.root=info
log4j.logger.org.hibernate=error
logging.level.org.springframework = error
logging.level.org.hibernate=ERROR

## MULTIPART (MultipartProperties) for file attachments (chat)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
# use this if files are saved to file system
file.upload-dir=./attachments
